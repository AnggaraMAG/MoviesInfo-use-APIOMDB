{"version":3,"sources":["config/APIKey.js","components/layout/spinner.gif","components/layout/Header.js","components/layout/Info.js","_actions/searchActions.js","config/constants.js","components/home/Search.js","components/layout/Spinner.js","components/home/MovieCard.js","components/home/MovieContainer.js","components/home/Landing.js","components/home/Movie.js","App.js","serviceWorker.js","_reducers/moviesReducers.js","_reducers/index.js","store.js","index.js"],"names":["module","exports","APIKey","Header","Navbar","bg","variant","to","Brand","href","Info","ModalFooter","target_","setLoading","type","Search","onChange","e","props","searchMovie","target","value","onSubmit","preventDefault","fetchMovies","text","Jumbotron","className","Form","this","Control","placeholder","name","Button","Component","connect","state","movies","dispatch","payload","a","axios","get","response","data","console","log","Spinner","src","spinner","style","widh","margin","display","alt","MovieCard","movie","Card","width","marginTop","Img","Poster","Body","Title","Text","Year","imdbID","MovieContainer","content","map","index","key","justifyContent","Landing","loading","Movie","fetchMovie","match","params","id","movieinfo","Row","Col","sm","marginLeft","ListGroup","as","Item","Released","Runtime","Genre","Writer","Actors","Plot","Langeage","Awards","imdbRating","imdbVotes","App","exact","path","component","Boolean","window","location","hostname","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.553bfc73.chunk.js","sourcesContent":["module.exports = {\r\n  APIKey: \"d896c01a\",\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/spinner.c38d59b0.gif\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Navbar } from \"react-bootstrap\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div>\r\n      <Navbar bg=\"primary\" variant=\"dark\">\r\n        <Link to=\"/\">\r\n          <Navbar.Brand href=\"#home\">Movies Info</Navbar.Brand>\r\n        </Link>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { ModalFooter } from \"react-bootstrap\";\r\n\r\nfunction Info() {\r\n  return (\r\n    <div>\r\n      <ModalFooter bg=\"primary\" variant=\"dark\">\r\n        <p>\r\n          <b>Developer @AnggaraMAG API</b>{\" \"}\r\n          <a target_ href=\"http://www.omdbapi.com/\">\r\n            OMDBAPI\r\n          </a>\r\n        </p>\r\n      </ModalFooter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Info;\r\n","import {\r\n  SEARCH_MOVIE,\r\n  FETCH_MOVIES,\r\n  FETCH_MOVIE,\r\n  LOADING,\r\n} from \"../config/constants\";\r\nimport axios from \"axios\";\r\nimport { APIKey } from \"../config/APIKey\";\r\n\r\nexport const searchMovie = (text) => (dispatch) => {\r\n  dispatch({\r\n    type: SEARCH_MOVIE,\r\n    payload: text,\r\n  });\r\n};\r\n\r\nexport const fetchMovies = (text) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `http://www.omdbapi.com/?apikey=${APIKey}&s=${text}`\r\n    );\r\n    dispatch({\r\n      type: FETCH_MOVIES,\r\n      payload: response.data.Search,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const fetchMovie = (id) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `http://www.omdbapi.com/?apikey=${APIKey}&i=${id}`\r\n    );\r\n    dispatch({\r\n      type: FETCH_MOVIE,\r\n      payload: response.data,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const setLoading = () => {\r\n  return {\r\n    type: LOADING,\r\n  };\r\n};\r\n","export const SEARCH_MOVIE = \"SEARCH_MOVIE\";\r\nexport const FETCH_MOVIES = \"FETCH_MOVIES\";\r\nexport const FETCH_MOVIE = \"FETCH_MOVIE\";\r\nexport const LOADING = \"LOADING\";\r\n","import React, { Component } from \"react\";\r\nimport { Jumbotron, Button, Form } from \"react-bootstrap\";\r\nimport {\r\n  searchMovie,\r\n  fetchMovies,\r\n  setLoading,\r\n} from \"../../_actions/searchActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Search extends Component {\r\n  onChange = (e) => {\r\n    this.props.searchMovie(e.target.value);\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.fetchMovies(this.props.text);\r\n    this.props.setLoading();\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Jumbotron className=\"text-center\">\r\n          <h1>Search for a Movie ,TV Series</h1>\r\n          <Form onSubmit={this.onSubmit}>\r\n            <Form.Control\r\n              placeholder=\" Search Movies, TV Series.... \"\r\n              name=\"searchText\"\r\n              onChange={this.onChange}\r\n            />\r\n            <div className=\"mt-3\">\r\n              <Button variant=\"primary\">Search</Button>\r\n            </div>\r\n          </Form>\r\n        </Jumbotron>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  text: state.movies.text,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  searchMovie,\r\n  fetchMovies,\r\n  setLoading,\r\n})(Search);\r\n","import React from \"react\";\r\nimport spinner from \"./spinner.gif\";\r\n\r\nfunction Spinner() {\r\n  return (\r\n    <div>\r\n      <img\r\n        src={spinner}\r\n        style={{ widh: \"200px\", margin: \"auto\", display: \"block\" }}\r\n        alt=\"Loading.....\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Spinner;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass MovieCard extends Component {\r\n  render() {\r\n    const { movie } = this.props;\r\n    return (\r\n      // <div style={{ marginLeft: 10, marginTop: 50, height: 400 }}>\r\n      <Card style={{ width: \"15rem\", marginTop: 50 }}>\r\n        <Card.Img variant=\"top\" src={movie.Poster} />\r\n        <Card.Body>\r\n          <Card.Title>{movie.Title}</Card.Title>\r\n          <Card.Text>{movie.Year}</Card.Text>\r\n          <Link to={`/movie/${movie.imdbID}`}>\r\n            <Button variant=\"primary\">Movie Details</Button>\r\n          </Link>\r\n        </Card.Body>\r\n      </Card>\r\n      // </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieCard;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport MovieCard from \"./MovieCard\";\r\n\r\nclass MovieContainer extends Component {\r\n  render() {\r\n    const { movies } = this.props;\r\n    let content = \"\";\r\n\r\n    content = movies ? (\r\n      movies.map((movie, index) => <MovieCard key={index} movie={movie} />)\r\n    ) : (\r\n      <>Movie not found....</>\r\n    );\r\n    return (\r\n      <div\r\n        className=\"row\"\r\n        style={{ display: \" flex \", justifyContent: \"center\" }}\r\n      >\r\n        {content}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  movies: state.movies.movies,\r\n});\r\nexport default connect(mapStateToProps)(MovieContainer);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Search from \"./Search\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport MovieContainer from \"./MovieContainer\";\r\n\r\nclass Landing extends Component {\r\n  render() {\r\n    const { loading } = this.props;\r\n    return (\r\n      <div>\r\n        <Search />\r\n        {loading ? <Spinner /> : <MovieContainer />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  loading: state.movies.loading,\r\n});\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from \"react\";\r\nimport { Card, Row, Col, ListGroup } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchMovie, setLoading } from \"../../_actions/searchActions\";\r\nimport Spinner from \"../layout/Spinner\";\r\n\r\nexport class Movie extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchMovie(this.props.match.params.id);\r\n    this.props.setLoading();\r\n  }\r\n  render() {\r\n    const { loading, movie } = this.props;\r\n\r\n    let movieinfo = (\r\n      <div className=\"mt-3\">\r\n        <Row>\r\n          <Col sm={4} style={{ marginLeft: 10 }}>\r\n            <Card.Img variant=\"top\" src={movie.Poster} />\r\n          </Col>\r\n          <Col>\r\n            <h3>Title : {movie.Title}</h3>\r\n            <ListGroup as=\"ul\">\r\n              <ListGroup.Item as=\"li\">\r\n                <b>Year : </b>\r\n                {movie.Year}{\" \"}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item as=\"li\">\r\n                <b>Realeased : </b>\r\n                {movie.Released}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item as=\"li\">\r\n                <b>Time : </b>\r\n                {movie.Runtime}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item as=\"li\">\r\n                <b>Genre : </b>\r\n                {movie.Genre}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item as=\"li\">\r\n                <b>Writer : </b>\r\n                {movie.Writer}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item as=\"li\">\r\n                <b>Actors : </b>\r\n                {movie.Actors}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item as=\"li\">\r\n                <b>Plot : </b>\r\n                {movie.Plot}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item as=\"li\">\r\n                <b>Language : </b>\r\n                {movie.Langeage}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item as=\"li\">\r\n                <b>Award : </b>\r\n                {movie.Awards}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item as=\"li\">\r\n                <b>Ratings : </b>\r\n                {movie.imdbRating}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item as=\"li\">\r\n                <b>Vote : </b>\r\n                {movie.imdbVotes}\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n\r\n    let content = loading ? <Spinner /> : movieinfo;\r\n    return <p>{content}</p>;\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  loading: state.movies.loading,\r\n  movie: state.movies.movie,\r\n});\r\nexport default connect(mapStateToProps, { fetchMovie, setLoading })(Movie);\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport Header from \"./components/layout/Header\";\nimport Info from \"./components/layout/Info\";\nimport Landing from \"./components/home/Landing\";\nimport Movie from \"./components/home/Movie\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Header />\n        <Route exact path=\"/\" component={Landing} />\n        <Route exact path=\"/movie/:id\" component={Movie} />\n        <Info />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n  SEARCH_MOVIE,\r\n  FETCH_MOVIES,\r\n  FETCH_MOVIE,\r\n  LOADING,\r\n} from \"../config/constants\";\r\n\r\nconst initialState = {\r\n  text: \"\",\r\n  movies: [],\r\n  loading: false,\r\n  movie: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SEARCH_MOVIE:\r\n      return {\r\n        ...state,\r\n        text: action.payload,\r\n        loading: false,\r\n      };\r\n    case FETCH_MOVIES:\r\n      return {\r\n        ...state,\r\n        movies: action.payload,\r\n        loading: false,\r\n      };\r\n    case FETCH_MOVIE:\r\n      return {\r\n        ...state,\r\n        movie: action.payload,\r\n        loading: false,\r\n      };\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport moviesReducers from \"./moviesReducers\";\r\n\r\nexport default combineReducers({\r\n  movies: moviesReducers,\r\n});\r\n","// import { createStore, applyMiddleware } from \"redux\";\r\n// import thunk from \"redux-thunk\";\r\n// import { composeWithDevTools } from \"redux-devtools-extension/developmentOnly\";\r\n// import rootReducers from \"./_reducers\";\r\n\r\n// const middleware = [thunk];\r\n// const initialState = {};\r\n\r\n// const store = createStore(\r\n//   rootReducers,\r\n//   initialState,\r\n//   composeWithDevTools(applyMiddleware(...middleware))\r\n// );\r\n// export default store;\r\n\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension/developmentOnly\";\r\nimport rootReducer from \"./_reducers\";\r\n\r\nconst middleware = [thunk];\r\nconst initialState = {};\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}